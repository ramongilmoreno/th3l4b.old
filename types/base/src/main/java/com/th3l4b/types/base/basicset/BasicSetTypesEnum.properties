id.java.class = java.lang.String
id.description = Up to 40 unicode characters text identifiers.
id.rationale = Capable of storing a SHA-1 hash.
id.you.have.to.fix.this.type = VARCHAR(40)
integer.java.class = java.lang.Long
integer.description = Positive and negative integer values with an absolute value of as much 2^60 
integer.rationale = 60 bits are dedicated to absolute value. This will safely fit in 64 bits integer data types regardless the negative numbers representation of the target platform.  
integer.you.have.to.fix.this.type = BIGINT
decimal.java.class = java.lang.Double
decimal.description = Decimal with 15 significant digits including at least a digit in the integral part and a digit in the fractional part.
decimal.rationale = Intended to fit into IEEE 754 double representations. 
decimal.you.have.to.fix.this.type = DECIMAL
boolean.java.class = java.lang.Boolean
boolean.rationale = Yes and No values. Note that any empty string will be considered as null value.
boolean.description = True or false value.
boolean.you.have.to.fix.this.type = CHAR(1)
date.java.class = java.lang.Long
date.description = Dates in gregorian calendar with no hour information, nor timezone. Stored in the same type as for integer.
date.rationale = No time information please. 2^60 is 1152921504606846976. The smallest date is -1152921504606840101 and the longest date is 1152921504606841231. 
date.you.have.to.fix.this.type = DATE
timestamp.java.class = java.lang.Long
timestamp.description = Milliseconds (positive and negative) from 0:00 January 1st 1970 UTC. Stored in the same format as the integer type. 
timestamp.you.have.to.fix.this.type = BIGINT
label.java.class = java.lang.String
label.description = Up to 50 unicode characters text. Intended for single lines fields, though any character including line breaks is acceptable.
label.rationale = To display as a single line short field. For instance to enter the user name on a system.  
label.you.have.to.fix.this.type = VARCHAR(40)
string.java.class = java.lang.String
string.description = Up to 500 unicode characters text. Intended for single lines fields, though any character including line breaks is acceptable.
string.rationale = To display as a single line long filed. For instance to enter an email address or the subject of a message. 
string.you.have.to.fix.this.type = VARCHAR(500)
text.java.class = java.lang.String
text.description = 5000 unicode characters text. Intended for single lines fields, though any character including line breaks is acceptable. 
text.rationale = To display a a multiple line text box. The size intended to fit several book pages. Average 250 words per page with (5 characters per word + 1 space) = 1500 characters per pages = over 3 pages. 
text.you.have.to.fix.this.type = VARCHAR(5000)
